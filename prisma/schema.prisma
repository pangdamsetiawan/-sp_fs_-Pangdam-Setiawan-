// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Model untuk Pengguna
model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  ownedProjects Project[]    @relation("ProjectOwner")
  assignedTasks Task[]       @relation("TaskAssignee")
  memberships   Membership[]
}

// Model untuk Proyek
model Project {
  id        String    @id @default(uuid())
  name      String
  ownerId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  owner       User         @relation("ProjectOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  tasks       Task[]
  memberships Membership[]
}

// Model untuk Tugas
model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  status      String // contoh: todo | in-progress | done
  projectId   String
  assigneeId  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  project  Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  assignee User?   @relation("TaskAssignee", fields: [assigneeId], references: [id], onDelete: SetNull)
}

// Model untuk Keanggotaan Proyek (penghubung User dan Project)
model Membership {
  id        String   @id @default(uuid())
  userId    String
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@unique([userId, projectId]) // Memastikan user hanya bisa jadi member sekali per proyek
}